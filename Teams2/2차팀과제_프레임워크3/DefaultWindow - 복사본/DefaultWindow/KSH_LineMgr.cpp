#include "stdafx.h"
#include "KSH_LineMgr.h"
CKSH_LineMgr::CKSH_LineMgr()
{
}

CKSH_LineMgr::~CKSH_LineMgr()
{
	Release();
}

void CKSH_LineMgr::Initialize()
{
	Load_Line();
}

void CKSH_LineMgr::Render(HDC hDC)
{
	for (auto& Line : m_LineList)
		Line->Render(hDC);
}

void CKSH_LineMgr::Release()
{
	for_each(m_LineList.begin(), m_LineList.end(), Safe_Delete<CLine*>);
	m_LineList.clear();
}

bool CKSH_LineMgr::Collision_Line(float fX, float fY, float* pY)
{
	if (m_LineList.empty())
		return false;

	CLine* pTarget = nullptr;
	float f_closestY = FLT_MAX;
	for (auto& pLine : m_LineList)
	{
		//플레이어 x 좌표가 선 x좌표 사이인경우
		if (fX >= pLine->Get_Info().tLeft.fX &&
			fX <= pLine->Get_Info().tRight.fX)
		{
			//자기현재 y 보다 선 y가 더 아래에 있는선인경우
			float x1t = pLine->Get_Info().tLeft.fX;
			float y1t = pLine->Get_Info().tLeft.fY;
			float x2t = pLine->Get_Info().tRight.fX;
			float y2t = pLine->Get_Info().tRight.fY;
			float tmpfY = ((y2t - y1t) / (x2t - x1t)) * (fX - x1t) + y1t;
			//플레이어 x대응 선의 y가 플레이어y보다 크고 플레이어 x대응 선의 y가 선 거리보다 작은경우
			//if (tmpfY >= fY&&tmpfY<=f_closestY)
			if (tmpfY >= fY - 10.f && tmpfY <= f_closestY)
			{
				pTarget = pLine;
				f_closestY = tmpfY;
			}

		}
	}
	if (!pTarget)
		return false;

	float x1 = pTarget->Get_Info().tLeft.fX;
	float y1 = pTarget->Get_Info().tLeft.fY;
	float x2 = pTarget->Get_Info().tRight.fX;
	float y2 = pTarget->Get_Info().tRight.fY;

	*pY = ((y2 - y1) / (x2 - x1)) * (fX - x1) + y1;
	return true;
}

void CKSH_LineMgr::Load_Line()
{
	HANDLE		hFile = CreateFile(L"../Data/KSH_Line.dat",		// 파일 경로와 이름을 명시
		GENERIC_READ,			// 파일 접근 모드(GENERIC_WRITE : 쓰기 전용, GENERIC_READ : 읽기 전용)
		NULL,					// 공유 방식, 파일이 열려있는 상태에서 다른 프로세스가 오픈 할 때 허가하는 것에 대해서 설정(null 지정 시 공유하지 않음)
		NULL,					// 보안 속성, NULL인 기본 값 설정 유지
		OPEN_EXISTING,			// 생성 방식( CREATE_ALWAYS : 파일이 없다면 생성, 있으면 덮어 쓰기, OPEN_EXISTING : 파일이 있을 경우에만 불러오기)
		FILE_ATTRIBUTE_NORMAL,	// 파일 속성( FILE_ATTRIBUTE_NORMAL : 아무런 속성이 없는 파일)
		NULL);					// 생성될 파일의 속성을 제공할 템플릿 파일(사용하지 않기 때문에 NULL)

	if (INVALID_HANDLE_VALUE == hFile)
	{
		MessageBox(g_hWnd, L"Load Failed", _T("error"), MB_OK);
		return;
	}

	DWORD	dwByte(0);
	LINE	tLine{};

	while (true)
	{
		ReadFile(hFile, &tLine, sizeof(LINE), &dwByte, nullptr);

		if (0 == dwByte)
			break;

		m_LineList.push_back(new CLine(tLine.tLeft, tLine.tRight));
	}

	CloseHandle(hFile);
	MessageBox(g_hWnd, L"ksh map data load 완료", L"Success", MB_OKCANCEL);
}